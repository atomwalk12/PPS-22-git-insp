name: Make new release
on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  JAVA_VERSION: 21

permissions:
  contents: read

jobs:
  release:
    concurrency:
      group: release-${{ github.event.number || github.ref }}
      cancel-in-progress: true
    name: Release
    runs-on: ubuntu-22.04
    permissions:
        contents: read # to be able to publish a GitHub release
        issues: write # to be able to comment on released issues
        pull-requests: write # to be able to comment on released pull requests
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.GH_APPLICATION_ID }}
          private-key: ${{ secrets.GH_APPLICATION_KEY }}
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
      - uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: temurin
      - name: Build JAR
        run: sbt assembly

      # Build LaTeX document
      - name: Compile LaTeX document
        uses: xu-cheng/latex-action@v3
        with:
          root_file: docs/report/report.tex

      - name: Check for LaTeX errors and warnings
        run: |
          if grep -q "^!" docs/report/report.log; then
            echo "LaTeX errors found:"
            grep "^!" docs/report/report.log
            exit 1
          elif grep -q "Warning:" docs/report/report.log; then
            echo "LaTeX warnings found:"
            grep "Warning:" docs/report/report.log
            echo "Build completed with warnings."
          else
            echo "LaTeX build completed successfully without errors or warnings."
          fi

      - name: Upload PDF as artifact
        uses: actions/upload-artifact@v4
        with:
          name: report.pdf
          path: docs/report/report.pdf

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"

      # Make the PDF file available for semantic-release to include in the release
      - name: Copy PDF to assets directory
        run: |
          mkdir -p .release-assets
          cp docs/report/report.pdf .release-assets/

      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
        run: npx semantic-release
