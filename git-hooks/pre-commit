#!/bin/bash
set -e  # Exit immediately if any command fails

echo "Running pre-commit checks..."

# Fast compile
sbt "Test / compile"

# Run scalafix to fix any other issues
echo "Running scalafix..."
sbt scalafixAll

# Format Scala files using scalafmt
echo "Running scalafmt..."
sbt scalafmtAll

# Optional: Run lightweight tests only
sbt "testOnly -- -l gitinsp.tests.tags.ExternalService" # Exclude tests relying on external services

# Include only fast and medium tests only
# This serves as an example on how to run specific tests.
# Since we run all tests besides slow tests above, we don't need to use this.
# sbt "testOnly -- -n com.example.tags.Fast,com.example.tags.Medium"

# Re-add any files that were modified by formatters
echo "Re-adding modified files..."

# Pipeline explanation:
# 1. git diff --name-only --cached: Lists all files that are staged for commit
# 2. xargs -I{}: For each line of input (each filename), run the following command,
#    replacing {} with the filename
# 3. sh -c '...': Execute the command in a subshell to handle filenames with spaces
# 4. if [ -f "{}" ]: Check if the file exists before trying to add it
# 5. || true: Prevent any xargs failures from stopping the script (due to set -e)
git diff --name-only --cached | xargs -I{} sh -c 'if [ -f "{}" ]; then git add "{}"; fi' || true

echo "All checks passed!"
